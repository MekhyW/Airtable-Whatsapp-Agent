version: '3.8'

services:
  # Production application service
  app:
    image: ${ECR_REGISTRY}/${ECR_REPOSITORY}:${IMAGE_TAG:-latest}
    container_name: airtable-whatsapp-agent-prod
    restart: unless-stopped
    ports:
      - "8000:8000"
    environment:
      - ENVIRONMENT=production
      - LOG_LEVEL=WARNING
      - HOST=0.0.0.0
      - PORT=8000
      - AWS_DEFAULT_REGION=${AWS_REGION}
    env_file:
      - .env.production
    volumes:
      - /var/log/airtable-whatsapp:/app/logs
    networks:
      - app-network
    deploy:
      resources:
        limits:
          cpus: '2.0'
          memory: 2G
        reservations:
          cpus: '1.0'
          memory: 1G
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    logging:
      driver: "awslogs"
      options:
        awslogs-group: "/aws/ecs/airtable-whatsapp-agent"
        awslogs-region: "${AWS_REGION}"
        awslogs-stream-prefix: "app"

  # Nginx with SSL termination
  nginx:
    image: nginx:alpine
    container_name: airtable-whatsapp-nginx-prod
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.prod.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - /var/log/nginx:/var/log/nginx
    networks:
      - app-network
    depends_on:
      - app
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 256M
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    logging:
      driver: "awslogs"
      options:
        awslogs-group: "/aws/ecs/airtable-whatsapp-nginx"
        awslogs-region: "${AWS_REGION}"
        awslogs-stream-prefix: "nginx"

  # CloudWatch agent for metrics
  cloudwatch-agent:
    image: amazon/cloudwatch-agent:latest
    container_name: airtable-whatsapp-cloudwatch
    restart: unless-stopped
    environment:
      - AWS_REGION=${AWS_REGION}
    volumes:
      - ./monitoring/cloudwatch-config.json:/opt/aws/amazon-cloudwatch-agent/etc/amazon-cloudwatch-agent.json:ro
      - /var/log:/var/log:ro
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
    networks:
      - app-network
    privileged: true
    logging:
      driver: "awslogs"
      options:
        awslogs-group: "/aws/ecs/airtable-whatsapp-cloudwatch"
        awslogs-region: "${AWS_REGION}"
        awslogs-stream-prefix: "cloudwatch"

  # WhatsApp MCP Server (Public) - Production
  whatsapp-mcp:
    image: node:18-alpine
    container_name: whatsapp-mcp-server-prod
    restart: unless-stopped
    working_dir: /app
    command: >
      sh -c "
        npm install -g whatsapp-mcp-server &&
        whatsapp-mcp --host 0.0.0.0 --port 8001
      "
    ports:
      - "8001:8001"
    environment:
      - GREENAPI_ID_INSTANCE=${GREENAPI_ID_INSTANCE}
      - GREENAPI_API_TOKEN=${GREENAPI_API_TOKEN}
    networks:
      - app-network
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 256M
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:8001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    logging:
      driver: "awslogs"
      options:
        awslogs-group: "/aws/ecs/airtable-whatsapp-mcp"
        awslogs-region: "${AWS_REGION}"
        awslogs-stream-prefix: "whatsapp-mcp"

  # Airtable MCP Server (Public) - Production
  airtable-mcp:
    image: node:18-alpine
    container_name: airtable-mcp-server-prod
    restart: unless-stopped
    working_dir: /app
    command: >
      sh -c "
        npm install -g @domdomegg/airtable-mcp-server &&
        npx airtable-mcp-server
      "
    ports:
      - "8002:8000"
    environment:
      - AIRTABLE_API_KEY=${AIRTABLE_API_KEY}
      - HOST=0.0.0.0
      - PORT=8000
    networks:
      - app-network
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 256M
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    logging:
      driver: "awslogs"
      options:
        awslogs-group: "/aws/ecs/airtable-whatsapp-mcp"
        awslogs-region: "${AWS_REGION}"
        awslogs-stream-prefix: "airtable-mcp"

networks:
  app-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16